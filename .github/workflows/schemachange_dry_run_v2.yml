name: Pull Docker Image and Run schemachange Dry Run

on:
  workflow_dispatch:   # Allow manual triggering
    inputs:
      dir_type:
        description: 'Select type of scripts?'
        required: true
        type: choice
        options:
          - 'versioned'
          - 'always'
          - 'repeatable'
      folder:
        description: 'Select specific folder'
        required: true
        type: choice
        options: []


jobs:

  prepare_folders:
    runs-on: ubuntu-latest
    outputs:
      folders: ${{ steps.get_folders.outputs.folders }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: List folders
        id: get_folders
        run: |
          dir_type=${{ github.event.inputs.dir_type }}
          if [ "$dir_type" = "versioned" ]; then
            folders=$(ls -d ./instances/schemachange/scripts/versioned/*/ | xargs -n 1 basename)
          elif [ "$dir_type" = "always" ]; then
            folders=$(ls -d ./instances/schemachange/scripts/always/*/ | xargs -n 1 basename)
          elif [ "$dir_type" = "repeatable" ]; then
            folders=$(ls -d ./instances/schemachange/scripts/repeatable/*/ | xargs -n 1 basename)
          else
            folders=""
          fi
          echo "::set-output name=folders::$folders"

      - name: Set folder options
        id: set_folder_options
        run: |
          echo "Available folders:"
          echo "${{ steps.get_folders.outputs.folders }}"
          
  run_schemachange:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to JFrog Artifactory
        env:
          JFROG_USERNAME: ${{ secrets.JFROG_USERNAME }}
          JFROG_IDENTITY_TOKEN: ${{ secrets.JFROG_IDENTITY_TOKEN }}
        run: |
          echo $JFROG_IDENTITY_TOKEN | docker login ${{ secrets.JFROG_REGISTRY }} -u ${{ secrets.JFROG_USERNAME }} --password-stdin
      
      - name: Pull Docker image
        run: docker pull ${{ secrets.JFROG_REGISTRY }}/schemachange:latest
 
      - name: Run schemachange dry run
        id: schemachange
        env:
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
        run: |
          docker run --rm -v ${{ github.workspace }}/instances/schemachange:/instances/schemachange \
          -e SNOWFLAKE_PASSWORD=$SNOWFLAKE_PASSWORD \
          ${{ secrets.JFROG_REGISTRY }}/schemachange:latest \
          deploy \
          -f /instances/schemachange/scripts/versioned/sowmya_db \
          --config-folder /instances/schemachange/config/nonprod-us-east-2/sowmya_db/prod \
          -u $SNOWFLAKE_USER --dry-run
